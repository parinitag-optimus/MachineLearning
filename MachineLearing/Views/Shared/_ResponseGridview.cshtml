@model IEnumerable<MachineLearing.Models.UserQuery>
@using GridMvc.Html
@{
    var gd = new WebGrid(Model, canPage: true, rowsPerPage: 5, selectionFieldName: "selectedRow", ajaxUpdateContainerId: "gridContent");
    gd.Pager(WebGridPagerModes.NextPrevious);}

<link href="@Url.Content("~/Content/Gridmvc.css")" rel="stylesheet" />
<link href="@Url.Content("~/Content/bootstrap.min.css")" rel="stylesheet" />
<script src="@Url.Content("~/Scripts/gridmvc.min.js")"></script>  

    <div>

        @if (Model != null)
        {

             @Html.Grid(Model).Columns(columns =>
        {
            columns.Add(c => c.Id)
            .Titled("S No")
            .SetWidth(100);

            columns.Add(c => c.PossibleSolution)
            .Titled("Possible Solutions")
            .SetWidth(520);

            columns.Add(c => c.Score)
            .Titled("Score")
            .SetWidth(100)
            .Sortable(true)
            .Filterable(true);

        }).WithPaging(3).Sortable(true)
        }
        else
        {
            <center style="margin-top:10%; color:maroon; font-size:15px;">
                @Html.Label("No Data Available")
            </center>
        }
        </div>

